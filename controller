#!/usr/bin/bash
if [[ $# == 0 ]]; then exit 1; fi

LNAME=lkeyparser
LPATH=out/bin
PPATH=out/lkeyparser

function Build {
    echo "Assembling library ..."

    make DST=$LPATH/ NAME=$LNAME -q
    if [[ $? == 0 && -e $PPATH.deb ]]; then return 0; fi
    make DST=$LPATH/ NAME=$LNAME

    echo "Creating package ..."

    PKG_LIB=$PPATH/usr/local/lib
    PKG_INC=$PPATH/usr/local/include/$LNAME
    LIBRARY=$LPATH/lib$LNAME.so

    mkdir -p $PPATH/DEBIAN
    mkdir -p $PKG_LIB
    mkdir -p $PKG_INC

    cp $LIBRARY $PKG_LIB
    cp src/defines.hpp $PKG_INC
    cp src/key.hpp $PKG_INC
    cp src/parser.hpp $PKG_INC

    for i in $(objdump -p $LIBRARY | awk '/NEEDED/{print $2}'); do
        STRING=$(dpkg -S "$i" | awk '{print $1}' | head -1)
        DEB_DEPN="$DEB_DEPN, ${STRING%:*:}"
    done

    {
        echo "Package: $LNAME"
        echo "Version: 1.0.0"
        echo "Section: unknown"
        echo "Priority: optional"
        echo "Architecture: amd64"
        echo "Essential: no"
        echo "Installed-Size: $(($(du -k $PKG_INC | awk '{print $1}') + $(du -k $LIBRARY | awk '{print $1}')))"
        echo "Depends: ${DEB_DEPN:2}"
        echo "Maintainer: dyukoffv4 <net998art@gmail.com>"
        echo "Description: Light Key Parsing DL for C++ applications"
    } > $PPATH/DEBIAN/control

    dpkg-deb --build ./$PPATH
}

function Clean {
    echo "Clearing binary files ..."
    rm -rf out
}

if [[ $1 == "build" ]]; then Build; fi
if [[ $1 == "clean" ]]; then Clean; fi
exit 0
