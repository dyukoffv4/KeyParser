#!/usr/bin/bash
if [[ $# == 0 ]]; then exit 1; fi

LNAME=keyparser
LPATH=out/bin
PPATH=out/keyparser
LIBRARY=$LPATH/lib$LNAME.so

function Build {
    echo "Assembling library ..."

    make DST=$LPATH/ NAME=$LNAME -q
    if [[ $? == 0 && -e $PPATH.deb ]]; then return; fi
    make DST=$LPATH/ NAME=$LNAME

    echo "Creating package ..."

    PKG_DEB=$PPATH/DEBIAN
    PKG_LIB=$PPATH/usr/local/lib
    PKG_INC=$PPATH/usr/local/include/$LNAME

    mkdir -p $PKG_DEB
    mkdir -p $PKG_LIB
    mkdir -p $PKG_INC

    cp $LIBRARY $PKG_LIB
    cp src/defines.hpp $PKG_INC
    cp src/key.hpp $PKG_INC
    cp src/terminal.hpp $PKG_INC

    for i in $(objdump -p $LIBRARY | awk '/NEEDED/{print $2}'); do
        STRING=$(echo $(dpkg -S $i) | awk '{print $1}')
        DEB_DEPN="$DEB_DEPN, ${STRING%:*:}"
    done

    {
        echo "Package: $LNAME"
        echo "Version: 1.0"
        echo "Section: unknown"
        echo "Priority: optional"
        echo "Architecture: amd64"
        echo "Essential: no"
        echo "Installed-Size: $(($(du -k $PKG_INC | awk '{print $1}') + $(du -k $LIBRARY | awk '{print $1}')))"
        echo "Depends: ${DEB_DEPN: 2}"
        echo "Maintainer: dyukoffv4 <net998art@gmail.com>"
        echo "Description: Key Parsing DL for C++ applications"
    } >$PKG_DEB/control

    dpkg-deb --build ./$PPATH
}

function Loader {
    if [[ $1 == "-i" ]]; then
        echo "Installing package ..."
        sudo apt reinstall ./$PPATH.deb
    elif [[ $1 == "-r" && $(dpkg -l | grep $LNAME) ]]; then
        echo "Uninstalling package ..."
        sudo apt remove $LNAME
    fi
}

function Clean {
    echo "Clearing binary files ..."
    rm -rf $LPATH
    rm -rf $PPATH
}

if [[ $1 == "build" && $2 == "-i" ]]; then Build; Loader -i
elif [[ $1 == "build" ]]; then Build
elif [[ $1 == "clean" && $2 == "-a" ]]; then rm -rf out
elif [[ $1 == "clean" ]]; then Clean
elif [[ $1 == "prune" && $2 == "-c" ]]; then rm -rf out; Loader -r
elif [[ $1 == "prune" ]]; then Loader -r
else exit 1; fi
